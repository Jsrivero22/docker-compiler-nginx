services:
    # php
    app:
        build:
            context: .
            dockerfile: php/DockerFile
        image: ${APP_IMAGE_NAME}
        container_name: ${APP_SERVICE_NAME}
        restart: always
        working_dir: /var/www/
        volumes:
            - ../:/var/www/
            - ./php/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./php/php.ini:/usr/local/etc/php/conf.d/custom.ini
        environment:
            - MYSQL_HOST=${MYSQL_HOST}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}

    # nginx
    nginx:
        image: nginx:1.28
        container_name: ${NGINX_SERVICE_NAME}
        restart: always
        ports:
            - "${NGINX_PORT}:80"
            - "${NGINX_SSL_PORT}:443"
        volumes:
            - ../:/var/www
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./nginx/certs:/etc/nginx/certs

    # mysql (opcional) en el readme explico el por qué
    mysql:
        image: mysql:8.0
        container_name: ${MYSQL_CONTAINER_NAME}
        volumes:
            - ${MYSQL_DATA_VOLUME}:/var/lib/mysql
            # descomentar la siguiente línea si quieres inicializar la base de datos con un script SQL (este debe existir en la ruta indicada)
            # - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "${MYSQL_PORT}:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}


    # phpmyadmin (opcional) en el readme explico el por qué
    phpmyadmin:
        image: phpmyadmin:5.2.2-apache
        container_name: ${PHPMYADMIN_SERVICE_NAME}
        restart: always
        ports:
            - "${PHPMYADMIN_PORT}:80"
        environment:
            PMA_HOST: mysql
            PMA_USER: ${MYSQL_USER}
            PMA_PASSWORD: ${MYSQL_PASSWORD}
        depends_on:
            - mysql

    # mysql-backup (opcional) en el readme explico el por qué
    # descomentar si quieres hacer backups automáticos de la base de datos
    # mysql-backup:
    #     image: fradelg/mysql-cron-backup
    #     container_name: ${MYSQL_BACKUP_CONTAINER_NAME}
    #     restart: always
    #     environment:
    #         - MYSQL_HOST=mysql
    #         - MYSQL_USER=${MYSQL_USER}
    #         - MYSQL_PASS=${MYSQL_PASSWORD}
    #         - MYSQL_DB=${MYSQL_DATABASE}
    #         - CRON_TIME=0 17 * * * # Daily at 17:00
    #     volumes:
    #         - ./mysql/backups:/backup
    #     depends_on:
    #         - mysql

volumes:
    mi_proyecto_nginx_mysqldata:
        driver: local

networks:
  default:
    external:
      name: mi_proyecto_network_nginx
